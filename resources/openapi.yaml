openapi: 3.0.0
info:
  version: 1.0.0
  title: Environment Platform
  description: This is the RESTfull API specification for the environment platform which is developed for the environment ministry

paths:
  /users/{user-id}/requests:
    get:
      description: Returns all the requests related to the user
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/TreeRemovalBasicData"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    post:
      description: Creates a new requst
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TreeRemovalForm"
      responses:
        "201":
          description: Created request(Created)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "406":
          description: Failure in form data verification(Not Accepteble)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_type:
                    type: string
  /users/{user-id}/requests/{request-id}:
    get:
      description: Returns information of a specific request
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
        - name: request-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeRemovalObject"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Request not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /users/{user-id}/drafts:
    get:
      description: Returns all the drafts made by the user
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeRemovalDraftBasicdata"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    post:
      description: Creates a new request as a draft
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TreeRemovalForm"
      responses:
        "201":
          description: Created request(Created)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "406":
          description: Failure in form data verification(Not Accepteble)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_type:
                    type: string
  /users/{user-id}/draft/{draft-id}:
    get:
      description: Return information of a specific draft
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
        - name: draft-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeRemovalForm"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Request draft not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    put:
      description: Update information in an existing draft
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
        - name: draft-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TreeRemovalForm"
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Request draft not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    delete:
      description: Delete a request draft
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
        - name: draft-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Request draft not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /users/{user-id}/conversations:
    get:
      description: Get all the conversations linked to the requests of a specific user
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversations"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /users/{user-id}/conversations/{conversation-id}:
    get:
      description: Get the conversation linked to a specific request of a specific user
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
        - name: conversation-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecificConversation"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Conversation not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    post:
      description: Creates a new message on a specific conversation
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
        - name: conversation-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        "201":
          description: Created new message(Created)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Conversation not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /validate:
    post:
      description: Validates the map and it's coordinates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        "200":
          description: Validated the map object
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "406":
          description: Failure in validating the map(Not accepteble)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /ministries/{ministry-id}/requests:
    get:
      description: Get all the requests related to the ministries
      parameters:
        - name: ministry-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/TreeRemovalBasicData"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /ministries/{ministry-id}/requests/{request-id}:
    get:
      description: Get a specific request
      parameters:
        - name: ministry-id
          description: description
          in: path
          required: true
          schema:
            type: string
        - name: request-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TreeRemovalObject"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Request not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    patch:
      description: Update the exsisting information of the request or assign a ministry
      parameters:
        - name: ministry-id
          in: path
          required: true
          schema:
            type: string
        - name: request-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/AssignMinistry"
                - $ref: "#/components/schemas/StatusChange"
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Request not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /ministries/{ministry-id}/conversations:
    get:
      description: Get all the conversations regarding the requests
      parameters:
        - name: ministry-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversations"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
  /ministries/{ministry-id}/conversations/{conversation-id}:
    get:
      description: Get the conversation linked to the specific request
      parameters:
        - name: ministry-id
          in: path
          required: true
          schema:
            type: string
        - name: conversation-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfull response(Success)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecificConversation"
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Conversation not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
    post:
      description: Create a new message on the conversation
      parameters:
        - name: ministry-id
          in: path
          required: true
          schema:
            type: string
        - name: conversation-id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        "201":
          description: Created message(Created)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "401":
          description: Authorization failure(Unauthorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
        "404":
          description: Conversation not found(Not Found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string

components:
  schemas:
    TreeRemovalBasicData:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
            description: The title of the request
          removalDate:
            type: string
            description: Date of the removal
          status:
            type: string
            description: The status of the request
    TreeRemovalForm:
      type: object
      properties:
        title:
          type: string
          description: The title of the request
        removalDate:
          type: string
          description: Removal date of the trees
        reason:
          type: string
        type:
          type: string
        requestedBy:
          type: string
          description: The person who is requesting
        permitRequired:
          type: boolean
        landOwner:
          type: string
          description: Name of the landowner
        treeRemovalAutrhority:
          type: string
        city:
          type: string
        district:
          type: string
        nameOfTheLand:
          type: string
        planNumber:
          type: string
        location:
          $ref: "#/components/schemas/Location"
        treeInformation:
          type: array
          description: This includes all the inforemation about the trees which are to be cut
          items:
            type: object
            properties:
              species:
                type: string
              treeNumber:
                type: string
              heightType:
                type: string
                enum: ["Merchantable", "Top"]
              height:
                type: number
                description: This should be in meters
              girth:
                type: number
                description: The girth at the brest height and this should be in centimeters
              logDetails:
                type: array
                items:
                  type: object
                  properties:
                    minGirth:
                      type: number
                      description: minimum girth of the log
                    maxGirth:
                      type: number
                      description: maximum girth of the log
                    height:
                      type: number
                      description: length of the log
    TreeRemovalObject:
      type: object
      properties:
        title:
          type: string
          description: The title of the title
        removalDate:
          type: string
          description: Removal date of the trees
        reason:
          type: string
        type:
          type: string
        requestedBy:
          type: string
          description: The person who is requesting
        permitRequired:
          type: boolean
        landOwner:
          type: string
          description: Name of the landowner
        treeRemovalAutrhority:
          type: string
        city:
          type: string
        district:
          type: string
        nameOfTheLand:
          type: string
        planNumber:
          type: string
        location:
          type: array
          description: This includes all the points in the polygon
          items:
            type: object
            properties:
              latitude:
                type: number
              longitude:
                type: number
        treeInformation:
          type: array
          description: This includes all the inforemation about the trees which are to be cut
          items:
            type: object
            properties:
              species:
                type: string
              treeNumber:
                type: string
              heightType:
                type: string
                enum: ["Merchantable", "Top"]
              height:
                type: number
                description: This should be in meters
              girth:
                type: number
                description: The girth at the brest height and this should be in centimeters
              logDetails:
                type: array
                items:
                  type: object
                  properties:
                    minGirth:
                      type: number
                      description: minimum girth of the log
                    maxGirth:
                      type: number
                      description: maximum girth of the log
                    height:
                      type: number
                      description: length of the log
        progress:
          type: array
          items:
            type: object
            properties:
              authority:
                type: string
                description: This is the respective authority
              status:
                type: string
                description: current status of the request processed by a particular authority
    TreeRemovalDraftBasicdata:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
            description: The title of the request
          removalDate:
            type: string
            description: date of the removal
    Conversations:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
            description: This is the request title which is been discussing
          last_message:
            type: object
            description: The last message recieved or sent
            properties:
              user:
                type: string
                description: The person who sent the message
              time:
                type: string
                description: The message sent time
              hasRead:
                type: boolean
                description: If it is recieved whether read or not
              message:
                type: string
          completed:
            type: boolean
            description: whether the conversation is end or not
    SpecificConversation:
      type: object
      properties:
        title:
          type: string
          description: The title of the request
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        completed:
          type: boolean
          description: whether the conversation is end or not
    Message:
      type: object
      properties:
        user:
          type: string
          description: The person who sent the message
        time:
          type: string
          description: The message sent time
        hasRead:
          type: boolean
          description: If it is recieved whether read or not
        message:
          type: string
    Location:
      type: array
      description: This includes all the points in the polygon
      items:
        type: object
        properties:
          latitude:
            type: number
          longitude:
            type: number
    AssignMinistry:
      type: object
      properties:
        ministryName:
          type: string
        assigneBy:
          type: string
          description: The person who assigned the ministry
    StatusChange:
      type: object
      properties:
        ministry:
          type: string
          description: Name of the ministry
        status:
          type: string
          description: The current progress of the request
